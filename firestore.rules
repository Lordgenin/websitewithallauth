rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Helper function to check if user is accessing their own data
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Helper function to check if user has admin role
    // This checks both custom claims and the role field in user document
    function isAdmin() {
      return request.auth.token.admin == true || 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users collection rules
    match /users/{userId} {
      // Users can read and write their own data
      // Admins can read all user data
      allow read: if isSignedIn() && (isOwner(userId) || isAdmin());
      allow write: if isSignedIn() && isOwner(userId);
      
      // Only admins can modify role field
      allow update: if isSignedIn() && isAdmin() && 
        (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['role']));
      
      // User documents subcollection - accessible by the user and admins
      match /documents/{docId} {
        allow read: if isSignedIn() && (isOwner(userId) || isAdmin());
        allow write: if isSignedIn() && isOwner(userId);
        allow delete: if isSignedIn() && (isOwner(userId) || isAdmin());
      }
    }
    
    // Documents collection - central storage for all documents
    match /documents/{docId} {
      // Users can read and write their own documents
      // Admins can read all documents
      allow read: if isSignedIn() && (resource.data.userId == request.auth.uid || isAdmin());
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow update: if isSignedIn() && resource.data.userId == request.auth.uid;
      allow delete: if isSignedIn() && (resource.data.userId == request.auth.uid || isAdmin());
    }
    
    // Admin-only collections
    match /adminData/{docId} {
      allow read, write: if isSignedIn() && isAdmin();
    }
  }
} 